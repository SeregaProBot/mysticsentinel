import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ChatPermissions
from config import BOT_TOKEN, ADMINS, MODERATORS

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –ü—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤
ADMINS = ADMINS  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–æ–≤ (–∏–∑ config.py)
MODERATORS = MODERATORS  # –°–ø–∏—Å–æ–∫ ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤

# –¢—Ä–∏–≥–≥–µ—Ä—ã (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å)
TRIGGERS = {
    "–æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è": ["–¥—É—Ä–∞–∫", "–∏–¥–∏–æ—Ç", "—Ç—É–ø–æ–π"],
    "—Ä–µ–∫–ª–∞–º–∞": ["–∫—É–ø–∏—Ç—å", "–±–µ—Å–ø–ª–∞—Ç–Ω–æ", "–ø–µ—Ä–µ–π–¥–∏"],
}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MSG = (
    "üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {chat_title}, {user_name}! \n\n"
    "‚ö†Ô∏è –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞: \n"
    "‚Äî –ù–µ —Å–ø–∞–º—å—Ç–µ \n"
    "‚Äî –ù–µ –æ—Å–∫–æ—Ä–±–ª—è–π—Ç–µ –¥—Ä—É–≥–∏—Ö \n"
    "‚Äî –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞—Ä–∞–±—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã \n\n"
    "–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –æ–±—â–µ–Ω–∏–µ–º! ‚ú®"
)

# ========== –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´ ========== #
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if message.chat.type == 'private':
        await message.answer("üîÆ *Mystic Sentinel* ‚Äî —Ç–≤–æ–π –º–∞–≥–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–∞–∂. \n"
                           "–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.", parse_mode="Markdown")

# ========== –ê–î–ú–ò–ù-–ú–ï–ù–Æ (–í –õ–ò–ß–ö–ï) ========== #
@dp.message_handler(Command("admin"), user_id=ADMINS)
async def admin_menu(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=2)
    buttons = [
        InlineKeyboardButton("üõ° –ê–Ω—Ç–∏-—Å–ø–∞–º", callback_data="antispam"),
        InlineKeyboardButton("üîû –ê–Ω—Ç–∏-–∞—Ä–∞–±", callback_data="antiarab"),
        InlineKeyboardButton("‚ö° –¢—Ä–∏–≥–≥–µ—Ä—ã", callback_data="triggers"),
        InlineKeyboardButton("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", callback_data="manage"),
    ]
    keyboard.add(*buttons)
    await message.answer("‚öôÔ∏è *–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Mystic Sentinel*", reply_markup=keyboard, parse_mode="Markdown")

# ========== –ê–ù–¢–ò-–ê–†–ê–ë ========== #
@dp.message_handler(lambda msg: any(char in "ÿÄ-€ø" for char in msg.text))
async def anti_arab(message: types.Message):
    await message.delete()
    await message.answer(f"üö´ {message.from_user.mention}, –∞—Ä–∞–±—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∑–∞–ø—Ä–µ—â–µ–Ω—ã!")

# ========== –ê–ù–¢–ò-–°–ü–ê–ú ========== #
@dp.message_handler(content_types=types.ContentType.ANY, is_automatic_forward=True)
async def anti_spam(message: types.Message):
    if message.from_user.id not in ADMINS + MODERATORS:
        await message.delete()
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, ChatPermissions(can_send_messages=False))

# ========== –ü–†–ò–í–ï–¢–°–¢–í–ò–ï –ù–û–í–´–• ========== #
@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
async def welcome_new_member(message: types.Message):
    for user in message.new_chat_members:
        await message.answer(WELCOME_MSG.format(
            chat_title=message.chat.title,
            user_name=user.get_mention()
        ))
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

# ========== –£–î–ê–õ–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô –û –í–´–•–û–î–ï ========== #
@dp.message_handler(content_types=types.ContentType.LEFT_CHAT_MEMBER)
async def delete_left_member(message: types.Message):
    await message.delete()

# ========== –ö–û–ú–ê–ù–î–ê @ADMIN ========== #
@dp.message_handler(Text(startswith="@admin"))
async def call_admin(message: types.Message):
    admins_mention = " ".join([f"üëë {admin}" for admin in ADMINS])
    await message.reply(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –≤–Ω–∏–º–∞–Ω–∏–µ! {admins_mention}")

# ========== –ó–ê–ü–£–°–ö ========== #
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)